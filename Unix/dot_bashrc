# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

echo processing .bashrc

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# short & simple
PS1='\h :'

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

#
# My Windows7 setup
#
if [ -f ~/.bash_MyDesktop ]; then
    . ~/.bash_MyDesktop
    [ ! -z "$M2_HOME" ] && export M2_HOME="/opt/maven"
    #cd ~
fi

#
# My Win8 Desktop setup
#
if [ -f ~/.bash_MyWin8Desktop ]; then
    . ~/.bash_MyWin8Desktop
    alias sandboxpath='export PATH="`cd $MY_SANDBOX_OPENCV;pwd`/x64/vc14/bin:$PATH"'
fi

#
# My Ubuntu setup
#
if [ -f ~/.bash_MyUbuntu ]; then
    . ~/.bash_MyUbuntu
    # alias e='/opt/emacs/bin/emacs'
    # export PATH="/opt/Qt5.6.0/5.6/gcc_64/bin:$PATH"
    # export PATH="/opt/thrift/bin:$PATH"
    # alias sandboxpath='export LD_LIBRARY_PATH="$MY_SANDBOX_THRIFT/lib:$MY_SANDBOX_OPENCV/lib:$MY_SANDBOX_PYLON/lib64:$LD_LIBRARY_PATH"'
    #alias sb='cd ~/MyBbSandbox'
    # export ANT_OPTS="-Dhttp.proxyHost=proxy.research.ge.com -Dhttp.proxyPort=8080"
    # export MY_SANDBOX_QT=/opt/Qt5.6.0/5.6/gcc_64
    # export MY_SANDBOX_OPENCV=/opt/cvlbase/INSTALL/OPENCV
    # export MY_SANDBOX_BOOST=/opt/cvlbase/INSTALL/BOOST
    # export MY_SANDBOX_VXL=/opt/cvlbase/INSTALL/VXL
    # export MY_SANDBOX_WX=/opt/cvlbase/INSTALL/wx
    # export MY_SANDBOX_GLFW=/opt/cvlbase/INSTALL/GLFW
    # export MY_SANDBOX_VTK=/opt/cvlbase/INSTALL/VTK
    # export MY_SANDBOX_ITK=/opt/cvlbase/INSTALL/ITK
    # export MY_SANDBOX_THRIFT=/opt/thrift
    # export MY_SANDBOX_PYLON=/opt/pylon5
    # export MY_SANDBOX_RABBITMQ=/opt/rabbitmq-java-client
    # cd ~
fi

#
# My MacOS setup
#
if [ -f ~/.bash_MyMacBook ]; then
    . ~/.bash_MyMacBook
    alias sandboxpath='export DYLD_LIBRARY_PATH="$MY_SANDBOX_OPENCV/lib:$DYLD_LIBRARY_PATH"'
    alias e='open -a Emacs'
    alias e='/Applications/Emacs.app/Contents/MacOS/Emacs-10.7'
    export PATH="/opt/local/bin:$PATH"
    export PATH="/opt/local/cvs/bin:$PATH"
    export PATH="/usr/local/opt/bison/bin:$PATH"
    #export PATH="/Applications/CMake.app/Contents/bin:$PATH"
    export PATH="$PATH:/opt/qt/5.0.2/clang_64/bin"

    ### Added by the Heroku Toolbelt
    export PATH="/usr/local/heroku/bin:$PATH"

    export ANT_HOME="/usr/local/ant"
    export ANT_OPTS="-Dhttp.proxyHost=proxy.research.ge.com -Dhttp.proxyPort=8080"
    export PATH="$PATH:/usr/local/ant/bin"
    export PATH="/opt/apache-maven-3.3.9/bin:$PATH"
    export M2_HOME="/opt/apache-maven-3.3.9"

#    export PYTHONPATH=

    export JAVA_HOME=$(/usr/libexec/java_home)

    export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig"
    export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/lib/pkgconfig"

    export MY_SANDBOX_QT=/opt/qt/5.0.2/clang_64
    export MY_SANDBOX_OPENCV=/opt/CVLBASE/INSTALL/OPENCV
    export MY_SANDBOX_BOOST=/opt/CVLBASE/INSTALL/BOOST
    export MY_SANDBOX_WX=/opt/wx
    export MY_SANDBOX_GLFW=/opt/CVLBASE/INSTALL/GLFW
    export MY_SANDBOX_THRIFT=/opt/CVLBASE/INSTALL/THRIFT
    export MY_SANDBOX_VTK=/opt/CVLBASE/INSTALL/VTK
    export MY_SANDBOX_ITK=/opt/CVLBASE/INSTALL/ITK

    cd ~
fi
